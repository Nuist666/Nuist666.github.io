<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>项目分享：Catime</title>
      <link href="/2025/06/04/catime/"/>
      <url>/2025/06/04/catime/</url>
      
        <content type="html"><![CDATA[<h1 align="center">Catime：一款非常好用的计时器</h1><p><img src="/img/2025/06/catime.webp" alt="Catime"></p><!-- Demo 链接 --><div align="center">  <a href="https://vladelaina.github.io/Catime" target="_blank">    <img src="https://img.shields.io/badge/🌐_官方网站-访问(需要代理)-4285F4?style=for-the-badge" alt="官方网站" />  </a>  <a href="https://www.bilibili.com/video/BV1AsoKYgE3r/" target="_blank">    <img src="https://img.shields.io/badge/📺_演示视频-BiliBili-ff69b4?style=for-the-badge" alt="BiliBili演示" />  </a>  <a href="https://vladelaina.github.io/Catime/guide" target="_blank">    <img src="https://img.shields.io/badge/📖_用户指南-阅读(需要代理)-1DB954?style=for-the-badge" alt="用户指南" />  </a></div><h2 id="✨项目地址"><a href="#✨项目地址" class="headerlink" title="✨项目地址"></a>✨项目地址</h2><p><a href="https://github.com/vladelaina/Catime">https://github.com/vladelaina/Catime</a></p><!-- 项目描述 + 图标 --><p align="center" style="font-size: 18px; margin-bottom: 30px;">  🎉 无需安装设置，双击即可使用<br/>  🌸 简洁优雅界面，操作流畅<br/>  🚀 强大的键盘快捷键，提高效率</p><p align="center" style="font-size: 16px; color: #666; margin-bottom: 20px;">  一款极致轻量的 Windows 倒计时工具，具有番茄工作法功能、透明界面和丰富自定义选项，<br/>  只需几 MB 内存且几乎不占用 CPU 资源，便可在Windows 上优雅掌控时间。</p><h2 id="🌟特点"><a href="#🌟特点" class="headerlink" title="🌟特点"></a><a href="https://vladelaina.github.io/Catime/#core-features">🌟特点</a></h2><ul><li><strong>极简设计</strong>: 透明界面、点击穿透、随意拖拽和缩放、没有繁琐的图形化设置界面，不会让人有直观上多开一个软件的感觉</li><li><strong>灵活计时</strong>: 快速预设、自定义时间输入、显示当前时间(12&#x2F;24小时制)、倒计时、正计时、番茄时钟</li><li><strong>超时动作</strong>: 显示消息、显示当前时间、正计时、锁定屏幕、打开文件&#x2F;软件、打开网站、关机、重启</li><li><strong>自定义丰富</strong>: 47种字体、15种预设颜色、支持输入颜色值、使用调色板选择颜色、支持实时预览</li></ul><h2 id="📥-下载"><a href="#📥-下载" class="headerlink" title="📥 下载"></a>📥 下载</h2><p><a href="https://apps.microsoft.com/detail/9n3mzdf1z34v?referrer=appbadge&launch=true&mode=full"><img src="/img/2025/06/Get-it-from-Microsoft.svg" alt="Get it from Microsoft"></a></p><h4 id="Winget"><a href="#Winget" class="headerlink" title="Winget"></a>Winget</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install --id VladElaina.Catime</span><br></pre></td></tr></table></figure><h4 id="💾-手动下载"><a href="#💾-手动下载" class="headerlink" title="💾 手动下载"></a>💾 手动下载</h4><p>从 <a href="https://github.com/vladelaina/Catime/releases/latest">GitHub Releases</a> 下载最新版本。</p><h2 id="💡使用场景"><a href="#💡使用场景" class="headerlink" title="💡使用场景"></a><a href="https://vladelaina.github.io/Catime/#use-cases">💡使用场景</a></h2><ul><li>👔 下班倒计时</li><li>🍅 番茄时钟</li><li>🎮 打游戏时使用，可以随时看时间，避免玩过头</li><li>⏰ 定时打开<ul><li>🌐 网站</li><li>💻 软件</li><li>📄 文件</li><li>📝 批处理脚本</li><li>🔄 定时关机&#x2F;重启</li></ul></li><li>📊 ppt演示倒计时</li><li>🕰️ 作为桌面时钟使用</li><li>⏱️正计时&#x2F;倒计时</li></ul><p>演示视频(基于V1.0.5)：<a href="https://www.bilibili.com/video/BV1AsoKYgE3r/">BiliBili</a></p><p><img src="/img/2025/06/Catime.Showcase.webp" alt="Catime.Showcase"></p><h2 id="📑使用指南"><a href="#📑使用指南" class="headerlink" title="📑使用指南"></a><a href="https://vladelaina.github.io/Catime/guide">📑使用指南</a></h2><ul><li><strong>左键点击托盘图标</strong>: 设置<strong>时间</strong></li><li><strong>右键点击托盘图标</strong>: 设置<strong>菜单</strong></li><li><strong>编辑模式</strong>: 鼠标可以拖拽调整位置，滚轮调整大小，🖱️鼠标右键关闭编辑模式</li></ul><blockquote><p>配置文件保存在 <code>C:\Users\用户名\AppData\Local\Catime\config.ini</code></p></blockquote><h2 id="🛠️-从源代码构建"><a href="#🛠️-从源代码构建" class="headerlink" title="🛠️ 从源代码构建"></a>🛠️ <a href="https://vladelaina.com/blog-post?slug=Build_catime_from_source">从源代码构建</a></h2><h3 id="一、克隆："><a href="#一、克隆：" class="headerlink" title="一、克隆："></a>一、克隆：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:vladelaina/Catime.git</span><br><span class="line">cd Catime</span><br></pre></td></tr></table></figure><h3 id="二、工具（MinGW-xmake）"><a href="#二、工具（MinGW-xmake）" class="headerlink" title="二、工具（MinGW, xmake）"></a>二、工具（MinGW, xmake）</h3><h4 id="🐧Linux"><a href="#🐧Linux" class="headerlink" title="🐧Linux"></a>🐧Linux</h4><ul><li>Ubuntu <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update &amp;&amp; <span class="built_in">sudo</span> apt install -y mingw-w64 &amp;&amp; curl -fsSL https://xmake.io/shget.text | bash</span><br></pre></td></tr></table></figure></li><li>Arch<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syu --noconfirm mingw-w64 xmake</span><br></pre></td></tr></table></figure></li></ul><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><ol><li>准备工具</li></ol><table><thead><tr><th>工具</th><th>说明</th><th>推荐版本格式</th><th>下载地址</th></tr></thead><tbody><tr><td><strong>MinGW</strong></td><td>GCC 编译器</td><td><code>x86_64-&lt;版本号&gt;-release-win32-seh-ucrt-rtv&lt;数字&gt;-rev&lt;数字&gt;.7z</code></td><td><a href="https://github.com/niXman/mingw-builds-binaries/releases/latest">MinGW Build</a></td></tr><tr><td><strong>xmake</strong></td><td>构建工具</td><td><code>xmake-v&lt;版本号&gt;-win64.exe</code></td><td><a href="https://github.com/xmake-io/xmake/releases/latest">xmake</a></td></tr></tbody></table><ol start="2"><li>安装各工具</li></ol><h4 id="📦-2-1-安装-MinGW-Build"><a href="#📦-2-1-安装-MinGW-Build" class="headerlink" title="📦 2.1 安装  MinGW Build"></a>📦 2.1 安装  <a href="https://github.com/niXman/mingw-builds-binaries/releases/latest">MinGW Build</a></h4><ol><li><p><strong>解压 MinGW 到指定位置</strong><br>例：将 <code>x86_64-&lt;版本号&gt;-release-win32-seh-ucrt-rtv&lt;数字&gt;-rev&lt;数字&gt;.7z</code> 解压到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\mingw64</span><br></pre></td></tr></table></figure></li><li><p><strong>配置系统环境变量 PATH</strong></p><ul><li><p>打开：<code>控制面板 → 系统 → 高级系统设置 → 环境变量</code></p></li><li><p>在 <strong>系统变量</strong> 中找到 <code>Path</code>，点击”编辑”</p></li><li><p>添加以下路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\mingw64\bin</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>验证安装是否成功</strong></p><p>打开命令行（Win + R → 输入 <code>cmd</code> → 回车），输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure><p>若成功显示版本号，即表示 MinGW 安装完成 ✅</p></li></ol><h4 id="📦-2-2-安装-xmake"><a href="#📦-2-2-安装-xmake" class="headerlink" title="📦 2.2 安装 xmake"></a>📦 2.2 安装 <a href="https://github.com/xmake-io/xmake/releases/latest">xmake</a></h4><ol><li>运行 <code>xmake-v&lt;版本号&gt;-win64.exe</code> 进行安装</li><li>安装时会自动配置 PATH（若未配置，可手动添加 xmake 安装目录下的 <code>bin</code> 目录）</li></ol>  </details><h3 id="三、验证工具是否可用"><a href="#三、验证工具是否可用" class="headerlink" title="三、验证工具是否可用"></a>三、验证工具是否可用</h3><h4 id="✅-3-1-验证-gcc"><a href="#✅-3-1-验证-gcc" class="headerlink" title="✅ 3.1 验证 gcc"></a>✅ 3.1 验证 gcc</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure><h4 id="✅-3-2-验证-xmake"><a href="#✅-3-2-验证-xmake" class="headerlink" title="✅ 3.2 验证 xmake"></a>✅ 3.2 验证 xmake</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmake --version</span><br></pre></td></tr></table></figure><p>若均能正常显示版本号，则工具配置成功 🎉</p><h3 id="四、使用-xmake-构建项目"><a href="#四、使用-xmake-构建项目" class="headerlink" title="四、使用 xmake 构建项目"></a>四、使用 xmake 构建项目</h3><p>在项目根目录下打开命令行，使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmake         <span class="comment"># 编译项目</span></span><br><span class="line">xmake run     <span class="comment"># 编译并运行项目</span></span><br><span class="line">xmake clean   <span class="comment"># 清理构建产物</span></span><br></pre></td></tr></table></figure><h2 id="✨鸣谢"><a href="#✨鸣谢" class="headerlink" title="✨鸣谢"></a><a href="https://vladelaina.github.io/Catime/#thanks">✨鸣谢</a></h2><h2 id="🗝️版权声明"><a href="#🗝️版权声明" class="headerlink" title="🗝️版权声明"></a>🗝️版权声明</h2><p>本项目采用 Apache License 2.0 开源协议发布。</p><p>图标版权声明：</p><ul><li>软件图标由 <a href="https://space.bilibili.com/26087398">猫屋敷梨梨Official</a> 创作并保留所有权利，未经原作者明确授权，不得用于任何商业用途</li></ul><p>壁纸:</p><ul><li>作者:<a href="https://space.bilibili.com/26087398">猫屋敷梨梨Official</a><ul><li>动态壁纸链接：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=3171487185">Wallpaper Engine</a></li></ul></li></ul><hr><div align="center"><p>Copyright © 2025 - <strong>Catime</strong><br>By vladelaina<br>Made with ❤️ &amp; ⌨️</p></div>]]></content>
      
      
      <categories>
          
          <category> 项目分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时钟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目分享：LibreTV</title>
      <link href="/2025/05/31/libretv/"/>
      <url>/2025/05/31/libretv/</url>
      
        <content type="html"><![CDATA[<h1 id="LibreTV-免费在线视频搜索与观看平台"><a href="#LibreTV-免费在线视频搜索与观看平台" class="headerlink" title="LibreTV - 免费在线视频搜索与观看平台"></a>LibreTV - 免费在线视频搜索与观看平台</h1><h2 id="📺-项目简介"><a href="#📺-项目简介" class="headerlink" title="📺 项目简介"></a>📺 项目简介</h2><p><a href="https://github.com/LibreSpark/LibreTV/">LibreTV</a> 是一个轻量级、免费的在线视频搜索与观看平台，提供来自多个视频源的内容搜索与播放服务。无需注册，即开即用，支持多种设备访问。项目结合了前端技术和后端代理功能，可部署在支持服务端功能的各类网站托管服务上。</p><p>本项目基于 <a href="https://github.com/bestK/tv">bestK&#x2F;tv</a> 进行重构与增强。</p><h2 id="✨-快速体验"><a href="#✨-快速体验" class="headerlink" title="✨ 快速体验"></a>✨ 快速体验</h2><p>前往<code>我的</code>-&gt;<code>追剧页</code> 或访问 <a href="https://libretv.nuist666.top/">LibreTV</a> 即可体验。(为了避免潜在的法律风险，已设置密码保护)</p><h2 id="🚀-快速部署"><a href="#🚀-快速部署" class="headerlink" title="🚀 快速部署"></a>🚀 快速部署</h2><p>选择以下任一平台，点击一键部署按钮，即可快速创建自己的 LibreTV 实例：</p><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/LibreSpark/LibreTV"><img src="/../img/2025/05/deploy-to-vercel.svg" alt="Deploy with Vercel"></a> <a href="https://app.netlify.com/start/deploy?repository=https://github.com/LibreSpark/LibreTV"><img src="/../img/2025/05/deploy-to-netlify.svg" alt="Deploy to Netlify"></a></p><p><a href="https://render.com/deploy?repo=https://github.com/LibreSpark/LibreTV"><img src="/../img/2025/05/deploy-to-render.svg" alt="Deploy to Render"></a></p><h2 id="⚠️-安全与隐私提醒"><a href="#⚠️-安全与隐私提醒" class="headerlink" title="⚠️ 安全与隐私提醒"></a>⚠️ 安全与隐私提醒</h2><h3 id="🔒-强烈建议设置密码保护"><a href="#🔒-强烈建议设置密码保护" class="headerlink" title="🔒 强烈建议设置密码保护"></a>🔒 强烈建议设置密码保护</h3><p>为了您的安全和避免潜在的法律风险，我们<strong>强烈建议</strong>在部署时设置密码保护：</p><ul><li><strong>避免公开访问</strong>：不设置密码的实例任何人都可以访问，可能被恶意利用</li><li><strong>防范版权风险</strong>：公开的视频搜索服务可能面临版权方的投诉举报</li><li><strong>保护个人隐私</strong>：设置密码可以限制访问范围，保护您的使用记录</li></ul><h3 id="📝-部署建议"><a href="#📝-部署建议" class="headerlink" title="📝 部署建议"></a>📝 部署建议</h3><ol><li><strong>设置环境变量 <code>PASSWORD</code></strong>：为您的实例设置一个强密码</li><li><strong>仅供个人使用</strong>：请勿将您的实例链接公开分享或传播</li><li><strong>遵守当地法律</strong>：请确保您的使用行为符合当地法律法规</li></ol><h3 id="🚨-重要声明"><a href="#🚨-重要声明" class="headerlink" title="🚨 重要声明"></a>🚨 重要声明</h3><ul><li>本项目仅供学习和个人使用</li><li>请勿将部署的实例用于商业用途或公开服务</li><li>如因公开分享导致的任何法律问题，用户需自行承担责任</li><li>项目开发者不对用户的使用行为承担任何法律责任</li></ul><h2 id="⚠️-请勿使用-Pull-Bot-自动同步"><a href="#⚠️-请勿使用-Pull-Bot-自动同步" class="headerlink" title="⚠️ 请勿使用 Pull Bot 自动同步"></a>⚠️ 请勿使用 Pull Bot 自动同步</h2><p>Pull Bot 会反复触发无效的 PR 和垃圾邮件，严重干扰项目维护。作者可能会直接拉黑所有 Pull Bot 自动发起的同步请求的仓库所有者。</p><p><strong>推荐做法：</strong></p><p>建议在 fork 的仓库中启用本仓库自带的 GitHub Actions 自动同步功能（见 <code>.github/workflows/sync.yml</code>）。</p><p>如需手动同步主仓库更新，也可以使用 GitHub 官方的 <a href="https://docs.github.com/cn/github/collaborating-with-issues-and-pull-requests/syncing-a-fork">Sync fork</a> 功能。</p><h2 id="📋-详细部署指南"><a href="#📋-详细部署指南" class="headerlink" title="📋 详细部署指南"></a>📋 详细部署指南</h2><h3 id="Cloudflare-Pages"><a href="#Cloudflare-Pages" class="headerlink" title="Cloudflare Pages"></a>Cloudflare Pages</h3><ol><li>Fork 或克隆本仓库到您的 GitHub 账户</li><li>登录 <a href="https://dash.cloudflare.com/">Cloudflare Dashboard</a>，进入 Pages 服务</li><li>点击”创建项目”，连接您的 GitHub 仓库</li><li>使用以下设置：<ul><li>构建命令：留空（无需构建）</li><li>输出目录：留空（默认为根目录）</li></ul></li><li><strong>⚠️ 重要：在”设置” &gt; “环境变量”中添加 <code>PASSWORD</code> 变量</strong></li><li>点击”保存并部署”</li></ol><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><ol><li>Fork 或克隆本仓库到您的 GitHub&#x2F;GitLab 账户</li><li>登录 <a href="https://vercel.com/">Vercel</a>，点击”New Project”</li><li>导入您的仓库，使用默认设置</li><li><strong>⚠️ 重要：在”Settings” &gt; “Environment Variables”中添加 <code>PASSWORD</code> 变量</strong></li><li>点击”Deploy”</li><li>可选：在”Settings” &gt; “Environment Variables”中配置密码保护</li></ol><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>使用 Docker 运行 LibreTV：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name libretv \</span><br><span class="line">  -p 8899:80 \</span><br><span class="line">  -e PASSWORD=your_password_here \</span><br><span class="line">  bestzwei/libretv:latest</span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:8899</code> 即可使用。</p><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p><code>docker-compose.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">libretv:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bestzwei/libretv:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">libretv</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8899:80&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PASSWORD=111111</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><h3 id="本地开发环境"><a href="#本地开发环境" class="headerlink" title="本地开发环境"></a>本地开发环境</h3><p>项目包含后端代理功能，需要支持服务器端功能的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先，通过复制示例来设置 .env 文件（可选）</span></span><br><span class="line"><span class="built_in">cp</span> .env.example .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动开发服务器</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:8080</code> 即可使用（端口可在.env文件中通过PORT变量修改）。</p><blockquote><p>⚠️ 注意：使用简单静态服务器（如 <code>python -m http.server</code> 或 <code>npx http-server</code>）时，视频代理功能将不可用，视频无法正常播放。完整功能测试请使用 Node.js 开发服务器。</p></blockquote><h2 id="🔧-自定义配置"><a href="#🔧-自定义配置" class="headerlink" title="🔧 自定义配置"></a>🔧 自定义配置</h2><h3 id="密码保护"><a href="#密码保护" class="headerlink" title="密码保护"></a>密码保护</h3><p>要为您的 LibreTV 实例添加密码保护，可以在部署平台上设置环境变量：</p><p><strong>环境变量名</strong>: <code>PASSWORD</code><br><strong>值</strong>: 您想设置的密码</p><p>各平台设置方法：</p><ul><li><strong>Cloudflare Pages</strong>: Dashboard &gt; 您的项目 &gt; 设置 &gt; 环境变量</li><li><strong>Vercel</strong>: Dashboard &gt; 您的项目 &gt; Settings &gt; Environment Variables</li><li><strong>Netlify</strong>: Dashboard &gt; 您的项目 &gt; Site settings &gt; Build &amp; deploy &gt; Environment</li><li><strong>Docker</strong>: 使用 <code>-e PASSWORD=your_password</code> 参数</li><li><strong>本地开发</strong>: SET PASSWORD&#x3D;your_password</li></ul><h3 id="API兼容性"><a href="#API兼容性" class="headerlink" title="API兼容性"></a>API兼容性</h3><p>LibreTV 支持标准的苹果 CMS V10 API 格式。添加自定义 API 时需遵循以下格式：</p><ul><li>搜索接口: <code>https://example.com/api.php/provide/vod/?ac=videolist&amp;wd=关键词</code></li><li>详情接口: <code>https://example.com/api.php/provide/vod/?ac=detail&amp;ids=视频ID</code></li></ul><p><strong>添加 CMS 源</strong>:</p><ol><li>在设置面板中选择”自定义接口”</li><li>接口地址: <code>https://example.com/api.php/provide/vod</code></li></ol><h2 id="⌨️-键盘快捷键"><a href="#⌨️-键盘快捷键" class="headerlink" title="⌨️ 键盘快捷键"></a>⌨️ 键盘快捷键</h2><p>播放器支持以下键盘快捷键：</p><ul><li><strong>空格键</strong>: 播放&#x2F;暂停</li><li><strong>左右箭头</strong>: 快退&#x2F;快进</li><li><strong>上下箭头</strong>: 音量增加&#x2F;减小</li><li><strong>M 键</strong>: 静音&#x2F;取消静音</li><li><strong>F 键</strong>: 全屏&#x2F;退出全屏</li><li><strong>Esc 键</strong>: 退出全屏</li></ul><h2 id="🛠️-技术栈"><a href="#🛠️-技术栈" class="headerlink" title="🛠️ 技术栈"></a>🛠️ 技术栈</h2><ul><li>HTML5 + CSS3 + JavaScript (ES6+)</li><li>Tailwind CSS</li><li>HLS.js 用于 HLS 流处理</li><li>DPlayer 视频播放器核心</li><li>Cloudflare&#x2F;Vercel&#x2F;Netlify Serverless Functions</li><li>服务端 HLS 代理和处理技术</li><li>localStorage 本地存储</li></ul><h2 id="⚠️-免责声明"><a href="#⚠️-免责声明" class="headerlink" title="⚠️ 免责声明"></a>⚠️ 免责声明</h2><p>LibreTV 仅作为视频搜索工具，不存储、上传或分发任何视频内容。所有视频均来自第三方 API 接口提供的搜索结果。如有侵权内容，请联系相应的内容提供方。</p><p>本项目开发者不对使用本项目产生的任何后果负责。使用本项目时，您必须遵守当地的法律法规。</p>]]></content>
      
      
      <categories>
          
          <category> 项目分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目分享：滚动歌词制作工具</title>
      <link href="/2025/05/26/lrc-maker/"/>
      <url>/2025/05/26/lrc-maker/</url>
      
        <content type="html"><![CDATA[<p><img src="/../img/2025/05/apple-touch-icon.png" alt="logo"></p><h1 id="歌词滚动姬"><a href="#歌词滚动姬" class="headerlink" title="歌词滚动姬"></a><a href="https://lrc-maker.nuist666.top/">歌词滚动姬</a></h1><h2 id="这个项目是什么"><a href="#这个项目是什么" class="headerlink" title="这个项目是什么"></a>这个项目是什么</h2><p>这是一个<a href="https://github.com/magic-akari/lrc-maker">滚动歌词制作工具</a>，滚动歌词是指带有时间标签的文本。</p><h2 id="为什么会有这个项目"><a href="#为什么会有这个项目" class="headerlink" title="为什么会有这个项目"></a>为什么会有这个项目</h2><p><a href="https://github.com/magic-akari">原作者</a>对于目前已有的工具不满意，无法跨平台使用，所以自己制作了一个。</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>打开<a href="https://lrc-maker.nuist666.top/">歌词滚动姬</a>即可开始，你可以把这个链接收藏到浏览器书签。将文件拖放到页面中加载，使用箭头键和空格键插入时间戳。</p><p>原仓库链接：</p><ul><li><a href="https://github.com/magic-akari/lrc-maker/">https://github.com/magic-akari/lrc-maker/</a></li></ul><p>开发分支版本链接:</p><ul><li><a href="https://magic-akari.github.io/lrc-maker/">https://magic-akari.github.io/lrc-maker/</a></li><li><a href="https://lrc-maker.vercel.app/">https://lrc-maker.vercel.app/</a></li></ul><h2 id="热键"><a href="#热键" class="headerlink" title="热键"></a>热键</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>space</kbd></td><td align="center">插入时间标签</td></tr><tr><td align="center"><kbd>backspace</kbd> &#x2F; <kbd>delete</kbd> &#x2F; <kbd>⌫</kbd></td><td align="center">移除时间标签</td></tr><tr><td align="center"><kbd>ctrl</kbd><kbd>enter↵</kbd> &#x2F; <kbd>⌘</kbd><kbd>↩</kbd></td><td align="center">播放 &#x2F; 暂停</td></tr><tr><td align="center"><kbd>←</kbd> &#x2F; <kbd>A</kbd></td><td align="center">回退 5 秒</td></tr><tr><td align="center"><kbd>→</kbd> &#x2F; <kbd>D</kbd></td><td align="center">前进 5 秒</td></tr><tr><td align="center"><kbd>↑</kbd> &#x2F; <kbd>W</kbd> &#x2F; <kbd>J</kbd></td><td align="center">选择上一行</td></tr><tr><td align="center"><kbd>↓</kbd> &#x2F; <kbd>S</kbd> &#x2F; <kbd>K</kbd></td><td align="center">选择下一行</td></tr><tr><td align="center"><kbd>-</kbd> &#x2F; <kbd>+</kbd></td><td align="center">当前行时间标签微调</td></tr><tr><td align="center"><kbd>ctrl</kbd><kbd>↑</kbd> &#x2F; <kbd>⌘</kbd><kbd>↑</kbd></td><td align="center">提高播放速度</td></tr><tr><td align="center"><kbd>ctrl</kbd><kbd>↓</kbd> &#x2F; <kbd>⌘</kbd><kbd>↓</kbd></td><td align="center">降低播放速度</td></tr><tr><td align="center"><kbd>R</kbd></td><td align="center">重置播放速度</td></tr></tbody></table><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>本项目的目标是兼容大部分现代浏览器，当前版本使用了很多的现代浏览器 API 来提升效能，改善用户体验。<br>本项目使用了 ES Module 来加载代码，这意味着浏览器的版本应该满足下列要求。</p><table><thead><tr><th align="left">浏览器</th><th align="left">版本</th></tr></thead><tbody><tr><td align="left">EDGE</td><td align="left">&gt;&#x3D; 16</td></tr><tr><td align="left">Firefox</td><td align="left">&gt;&#x3D; 60</td></tr><tr><td align="left">Chrome</td><td align="left">&gt;&#x3D; 61</td></tr><tr><td align="left">Safari</td><td align="left">&gt;&#x3D; 11</td></tr><tr><td align="left">ios_saf</td><td align="left">&gt;&#x3D; 11</td></tr></tbody></table><del>当前版本的 Edge 理论上应该支持，但是目前有不明原因导致代码加载后没有运行，这个问题留到 V8 内核的 Edge 发布后再做观察。</del><p>对 EDGE 浏览器低限度支持。</p><p>对于没有 ES Module 支持的浏览器，仍然做了回退处理以便正常使用。注意：此部分没有进行测试，旧浏览器仍然可能遇到 css 的布局错乱问题。</p><p>IE 等旧浏览器不再支持。对于这类浏览器使用者，可以使用本项目的<a href="https://lrc-maker.github.io/3.x">旧版本</a>。</p><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><p>如果你想在本地计算机上运行这个项目，可以遵循下面操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆这个仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/magic-akari/lrc-maker.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> lrc-maker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm i</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建</span></span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发模式构建</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h2 id="生产部署"><a href="#生产部署" class="headerlink" title="生产部署"></a>生产部署</h2><p>构建（<code>npm run build</code>）后，<code>build</code> 文件夹是静态网站文件。<br>您可以将其部署到任何 CDN 或静态文件服务器。</p><p>您还可以使用此存储库根目录下的 <code>Dockerfile</code> 构建一个 docker 镜像。<br>它运行构建并创建最小化的 nginx 镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建</span></span><br><span class="line">docker build -t lrc-maker .</span><br><span class="line"><span class="comment"># 创建一个容器并在 8080 端口提供服务</span></span><br><span class="line">docker run -d -p 8080:80 lrc-maker</span><br></pre></td></tr></table></figure><h2 id="给这个项目点一个星星"><a href="#给这个项目点一个星星" class="headerlink" title="给这个项目点一个星星"></a>给这个项目点一个星星</h2><p>如果你喜欢这个<a href="https://github.com/magic-akari/lrc-maker">项目</a>，请点一个星星吧，同时分享这个项目来帮助更多的人。</p><p><img src="/../img/2025/05/akari-hide-wall.svg" alt="akari-hide-wall"></p>]]></content>
      
      
      <categories>
          
          <category> 项目分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旧版博客网站入口</title>
      <link href="/2025/05/20/archive-old-blogs/"/>
      <url>/2025/05/20/archive-old-blogs/</url>
      
        <content type="html"><![CDATA[<h1 id="博客网站已更新。"><a href="#博客网站已更新。" class="headerlink" title="博客网站已更新。"></a>博客网站已更新。</h1><h2 id="点击此处前往旧版博客网站。"><a href="#点击此处前往旧版博客网站。" class="headerlink" title="点击此处前往旧版博客网站。"></a><a href="https://archive.nuist666.top/">点击此处</a>前往旧版博客网站。</h2><p><img src="/../img/2025/05/old-blogs.jpg" alt="旧版博客网站界面"></p>]]></content>
      
      
      <categories>
          
          <category> 大学生涯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旧版博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/05/20/hello-world/"/>
      <url>/2025/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello-world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
